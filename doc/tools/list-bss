
  LIST-BSS

  This command has been superceeded by the *.dsm file generated by the
  Makefile, which incorporates a description corresponding to a particular
  application revision. 

  The list-bss script lists the start addresses of each module's private
  storage.

  The addresses can be used with bali's cli dump <start> <end> command to
  examine the private storage of any process in particular.

  E.g. to examine the private storage of the TPLOG process running on fido:-

      (cd ../fido;list-bss)

  which prints:-

      00800100 00000002 D __malloc_heap_end
      00800102 00000002 D __malloc_heap_start
      00800104 00000002 D __malloc_margin
      00800106 00000048 b msg
      0080014e 0000000e b ser
      0080015c 0000005e b tty
      008001ba 00000006 b clk
      008001c0 0000001b b twi
      008001db 00000017 b memz
      008001f2 00000021 b memp
      00800213 00000026 b istream
      00800239 0000002b b bmp
      00800264 00000057 b tplog
      008002bb 0000001e b tempest
      008002d9 00000014 b keypad
      008002ed 00000019 b keysec
      00800306 00000002 b keyconf
      00800308 0000003c b keyexec
      00800344 0000002a b timz
      0080036e 0000000a b adcn
      00800378 00000022 b vitc
      0080039a 0000001a b rtc
      008003b4 00000006 b sysinit
      008003ba 00000022 b syscon
      008003dc 0000003e b inp
      0080041a 00000001 B lost_msgs
      0080041b 00000002 B __brkval
      0080041d 00000002 B __flp
      0080041f 00000004 B __utc_offset
      00800423 00000002 B __dst_ptr

  We can see tplog private storage starts at 0x264 and extends for 0x57 bytes.
  Using bali's cli dump command:-

      dump fido 264 +57

  which prints:-

      0264 05:00:00:00 61:64:09:66 62:65:2C:36 36:30:39:36 
      0274 34:36:31:2C 30:39:2C:31 46:35:39:38 34:30:34:0A 
      0284 00:00:03:02 00:08:00:03 00:08:00:04 00:08:00:05 
      0294 00:08:00:00 00:0B:AA:02 34:05:00:00 15:00:00:40 
      02A4 69:00:6C:02 00:00:00:00 0B:C7:E1:2A 00:0F:00:A5 
      02B4 A6:02:00:00 05:00:00:

  This corresponds to the tplog structure defined in lib/bmp/tplog.c:-

      typedef struct {
          state_t state;
          unsigned next_file : 1;
          unsigned auto_start : 1;
          ProcNumber replyTo;
          uchar_t nerrors;
          time_t now;
          char cbuf[RECORD_LEN];
          char *basename;
          uchar_t idx;
          nbuf_t nbuf[MAX_FILES];
          d_inode *ibuf;
          union {
              fsd_msg fsd;
              rwr_msg rwr;
          } msg;
          union {
              clk_info clk;
              bmp_info bmp;
              twi_info twi;
          } info;
      } tplog_t;

